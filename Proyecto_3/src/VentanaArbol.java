
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Jegor
 * Quien no sabe lo que busca no entiende lo que encuentra...
 */
public class VentanaArbol extends javax.swing.JFrame {

    /**
     * Creates new form VentanaArbol
     */
    private ArbolTarjetas arbol = new ArbolTarjetas();

    public VentanaArbol() {
        setTitle("Ventana Principal.");
        initComponents();

        setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE); // para controlar el cierre manualmente

        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                JOptionPane.showMessageDialog(VentanaArbol.this,
                    "La siguiente frase me ha inspirado a aprender mejor:\n\n"
                            + "Quien no sabe lo que busca no entiende lo que encuentra...", 
                    "Muchas gracias!!!", JOptionPane.DEFAULT_OPTION);
                System.exit(0);
            }
        });
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDato = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        btnInsertar = new javax.swing.JButton();
        btnInOrden = new javax.swing.JButton();
        btnPreOrden = new javax.swing.JButton();
        btnPostOrden = new javax.swing.JButton();
        cmbCategoria = new javax.swing.JComboBox<>();
        lblDato1 = new javax.swing.JLabel();
        lblDato2 = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();
        JScrollpane = new javax.swing.JScrollPane();
        txtResultado = new javax.swing.JTextArea();
        btnContar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnBuscarPorId = new javax.swing.JButton();
        btnFracesIconicas = new javax.swing.JButton();
        btnMayorMenorId = new javax.swing.JButton();
        btnGraficarArbol = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblDato.setText("ID de tarjeta:");

        btnInsertar.setText("Insertar.");
        btnInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarActionPerformed(evt);
            }
        });

        btnInOrden.setText("In Orden");
        btnInOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInOrdenActionPerformed(evt);
            }
        });

        btnPreOrden.setText("Pre Orden.");
        btnPreOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreOrdenActionPerformed(evt);
            }
        });

        btnPostOrden.setText("Post Orden.");
        btnPostOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPostOrdenActionPerformed(evt);
            }
        });

        cmbCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Civiles", "Equipos", "Súper héroes", "Objetos", "Súper villanos", "Paneles", "Cara a cara", "Frases icónicas", "Película especial" }));

        lblDato1.setText("Descripción:");

        lblDato2.setText("Categoría:");

        txtResultado.setColumns(20);
        txtResultado.setRows(5);
        JScrollpane.setViewportView(txtResultado);

        btnContar.setText("Contar.");
        btnContar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnContarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar Tarjeta.");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnBuscarPorId.setText("Buscar por ID.");
        btnBuscarPorId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarPorIdActionPerformed(evt);
            }
        });

        btnFracesIconicas.setText("Fraces Icónicas.");
        btnFracesIconicas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFracesIconicasActionPerformed(evt);
            }
        });

        btnMayorMenorId.setText("Mayor y menor ID.");
        btnMayorMenorId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMayorMenorIdActionPerformed(evt);
            }
        });

        btnGraficarArbol.setText("Graficar árbol.");
        btnGraficarArbol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGraficarArbolActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDato, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDato1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDato2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbCategoria, 0, 214, Short.MAX_VALUE)
                            .addComponent(txtId)
                            .addComponent(txtDescripcion))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnInsertar)
                                .addGap(18, 18, 18)
                                .addComponent(btnInOrden)
                                .addGap(18, 18, 18)
                                .addComponent(btnPreOrden)
                                .addGap(18, 18, 18)
                                .addComponent(btnPostOrden))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnContar)
                                .addGap(18, 18, 18)
                                .addComponent(btnEliminar)
                                .addGap(18, 18, 18)
                                .addComponent(btnBuscarPorId))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnFracesIconicas)
                                .addGap(18, 18, 18)
                                .addComponent(btnMayorMenorId)
                                .addGap(18, 18, 18)
                                .addComponent(btnGraficarArbol))))
                    .addComponent(JScrollpane, javax.swing.GroupLayout.PREFERRED_SIZE, 738, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDato)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnInsertar)
                            .addComponent(btnInOrden)
                            .addComponent(btnPreOrden)
                            .addComponent(btnPostOrden))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnContar)
                            .addComponent(btnEliminar)
                            .addComponent(btnBuscarPorId))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnFracesIconicas)
                            .addComponent(btnMayorMenorId)
                            .addComponent(btnGraficarArbol)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDato1)
                            .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDato2))))
                .addGap(18, 18, 18)
                .addComponent(JScrollpane, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarActionPerformed
        // TODO add your handling code here:
        try {
            int id = Integer.parseInt(txtId.getText().trim());
            String descripcion = txtDescripcion.getText().trim();
            String categoria = cmbCategoria.getSelectedItem().toString();

            if (descripcion.isEmpty()) {
                JOptionPane.showMessageDialog(this, "La descripción no puede estar vacía.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                txtDescripcion.requestFocus();
                return;
            }

            Tarjeta nuevaTarjeta = new Tarjeta(id, descripcion, categoria);

            if (!arbol.existe(id)) {
                arbol.insertar(nuevaTarjeta);
                limpiar();              

                txtResultado.setText("Recorrido InOrden:\n" + arbol.recorridoInOrden());
            } else {
                JOptionPane.showMessageDialog(this, "Ya existe una tarjeta con ese ID.", "ID Duplicado", JOptionPane.ERROR_MESSAGE);
                txtId.setText("");
                txtId.requestFocus();
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El ID debe ser un número entero positivo(+) ó negativo(-) válido.", "Error de formato", JOptionPane.ERROR_MESSAGE);
            txtId.requestFocus();
        }catch (ArithmeticException e) {
            // Dentro de lo solicitado en el proyecto pide números enteros únicos 
            // pero no especifica si positivos o negativos
            JOptionPane.showMessageDialog(this, "El número ingresado excede el rango permitido para enteros.", "Desbordamiento", JOptionPane.ERROR_MESSAGE);
            txtId.requestFocus();
        }
    }//GEN-LAST:event_btnInsertarActionPerformed

    private void limpiar(){
        txtId.setText("");
        txtDescripcion.setText("");
        cmbCategoria.setSelectedIndex(0);
        txtId.requestFocus();
    }
    private void btnInOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInOrdenActionPerformed
        // TODO add your handling code here:
        String recorrido = arbol.recorridoInOrden();
        txtResultado.setText("Para una mejor comprensión puede graficar el árbol\n\n");
        txtResultado.append("Recorrido IN-ORDEN (izquierda – raíz – derecha):\n" + recorrido);
    }//GEN-LAST:event_btnInOrdenActionPerformed

    private void btnContarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnContarActionPerformed
        // TODO add your handling code here:
        txtResultado.setText("Cantidad de tarjetas 'Súper héroes' o 'Súper villanos': " + arbol.contarTarjetasCategoria());
    }//GEN-LAST:event_btnContarActionPerformed

    private void btnPostOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPostOrdenActionPerformed
        // TODO add your handling code here:
        String recorrido = arbol.recorridoPostOrden();
        txtResultado.setText("Para una mejor comprensión puede graficar el árbol\n\n");
        txtResultado.append("Recorrido POST-ORDEN (izquierda - derecha - raíz):\n" + recorrido);
    }//GEN-LAST:event_btnPostOrdenActionPerformed

    private void btnPreOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreOrdenActionPerformed
        // TODO add your handling code here:
        String resultado = arbol.recorridoPreOrden();
        txtResultado.setText("Para una mejor comprensión puede graficar el árbol\n\n");
        txtResultado.append("Recorrido PRE-ORDEN (raíz - izquierda - derecha):\n" + resultado);
    }//GEN-LAST:event_btnPreOrdenActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        VentanaEliminarTarjeta vet = new VentanaEliminarTarjeta(this, arbol); // le pasas el árbol actual
        vet.setLocationRelativeTo(this);
        vet.setVisible(true);
        
        this.setVisible(false); // Oculta la ventana principal
        
        // Al cerrarse, actualiza el lienzo
        vet.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent e) {
                txtResultado.setText("Recorrido IN-ORDEN:\n" + arbol.recorridoInOrden());
            }
        });
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnBuscarPorIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarPorIdActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        VentanaBuscarPorId vbid = new VentanaBuscarPorId(arbol, this); // le pasas el árbol actual
        vbid.setLocationRelativeTo(this);
        vbid.setVisible(true);
        
        this.setVisible(false); // Oculta la ventana principal
        
        // Al cerrarse, actualiza el lienzo
        vbid.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent e) {
                txtResultado.setText("Recorrido IN-ORDEN:\n" + arbol.recorridoInOrden());
            }
        });
    }//GEN-LAST:event_btnBuscarPorIdActionPerformed

    private void btnFracesIconicasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFracesIconicasActionPerformed
        // TODO add your handling code here:
        List<String> frases = arbol.listarDescripcionesFrasesIconicasEnHojas();
        txtResultado.setText("Frases icónicas en nodos hoja:\n");
        for (String frase : frases) {
            txtResultado.append("• " + frase + "\n");
        }
    }//GEN-LAST:event_btnFracesIconicasActionPerformed

    private void btnMayorMenorIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMayorMenorIdActionPerformed
        // TODO add your handling code here:
        Tarjeta menor = arbol.obtenerTarjetaMenorId();
        Tarjeta mayor = arbol.obtenerTarjetaMayorId();

        if (menor != null && mayor != null) {
            txtResultado.setText("Tarjeta con menor ID:\n" + menor.toString() + "\n\n");
            txtResultado.append("Tarjeta con mayor ID:\n" + mayor.toString());
        } else {
            txtResultado.setText("El árbol está vacío.");
        }
    }//GEN-LAST:event_btnMayorMenorIdActionPerformed

    private void btnGraficarArbolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGraficarArbolActionPerformed
        // TODO add your handling code here:
        VentanaGraficarArbol ventana = new VentanaGraficarArbol(arbol.getRaiz());
        ventana.setVisible(true);
    }//GEN-LAST:event_btnGraficarArbolActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaArbol.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaArbol.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaArbol.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaArbol.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaArbol().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane JScrollpane;
    private javax.swing.JButton btnBuscarPorId;
    private javax.swing.JButton btnContar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnFracesIconicas;
    private javax.swing.JButton btnGraficarArbol;
    private javax.swing.JButton btnInOrden;
    private javax.swing.JButton btnInsertar;
    private javax.swing.JButton btnMayorMenorId;
    private javax.swing.JButton btnPostOrden;
    private javax.swing.JButton btnPreOrden;
    private javax.swing.JComboBox<String> cmbCategoria;
    private javax.swing.JLabel lblDato;
    private javax.swing.JLabel lblDato1;
    private javax.swing.JLabel lblDato2;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextArea txtResultado;
    // End of variables declaration//GEN-END:variables
}
